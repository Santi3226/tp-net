@page "/login"
@using DTOs
@using API.Clients
@inject NavigationManager Navigation

<h3>Inicio de sesión</h3>

<div class="mb-3">
	<label class="form-label">Email</label>
	<InputText @bind-Value="email" class="form-control" />
</div>

<div class="mb-3">
	<label class="form-label">Contraseña</label>
	<InputText @bind-Value="contraseña" type="password" class="form-control" />
</div>

@if (!string.IsNullOrEmpty(errorMessage))
{
	<div class="alert alert-danger">@errorMessage</div>
}

<div class="d-flex gap-2">
	<button class="btn btn-primary" @onclick="ClickTest">Iniciar Sesión</button>
</div>

@code {
	private string email = string.Empty;
	private string contraseña = string.Empty;
	private string errorMessage = string.Empty;
	private PacienteDTO? pacienteLogueado;


	private void ClickTest()
	{
		errorMessage = "Hiciste click!";
	}

	private async Task Inicio()
	{
		errorMessage = string.Empty;

		if (!ValidateEntry())
			return;

		try
		{
			var pacientes = await PacienteApiClient.GetAllAsync();
			pacienteLogueado = pacientes.FirstOrDefault(p => p.Email == email && p.Contraseña == contraseña && p.Tipo == "Administrador");

			if (pacienteLogueado != null)
			{
				Navigation.NavigateTo("/home");
			}
			else
			{
				errorMessage = "Mail o contraseña incorrectos.";
			}
		}
		catch (Exception ex)
		{
			errorMessage = $"Error al iniciar sesión: {ex.Message}";
		}
	}

	private bool ValidateEntry()
	{
		if (string.IsNullOrWhiteSpace(email) || string.IsNullOrWhiteSpace(contraseña))
		{
			errorMessage = "Complete todos los campos";
			return false;
		}
		if (!email.Contains("@"))
		{
			errorMessage = "Ingrese un email válido";
			return false;
		}
		return true;
	}
}
